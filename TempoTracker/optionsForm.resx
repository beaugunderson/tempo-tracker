<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="unlockButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        L18EPxGlXwUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAD///8B/f39Dbq6utmmpqb5+/v7K////wH///8B////Af///wH///8B////Afz8/CGrq6vxs7Oz5f39
        /Rn///8B////Af39/RW6urrz29vb/7y8vO3c1MmBsp6FwYxtR+2MbUftsp6FwdzTyIG5ubjz2dnZ/7a2
        tvv8/Pwj////Af///wH///8B+vr6QdPT0//Cv739nGs7/6ZsNf+ubzf/rm83/6ZsNf+hdkr/xcTD/8bG
        xf/6+vo/////Af///wH///8B////Aevl3WepkHP1r3hE/7uMXv/Ck3H/xJF0/8OPcf+/kGz/uIpd/7SG
        Wf+njW/16+XdZ////wH///8B////Afn39TW1mHXVs31G/8KZcf/Yqon/79/P//r28//69fP/79/R/9en
        hf++lGz/s31G/7WYddX59/U1////Af///wHm2s2BsIBK/8abb//Zqoj///7r///67v///fL///7y///8
        7////ev/2aN6/8KZbP+wgEr/5trNgf///wH///8Bz7SVwb+PWP/No4H/8NvB///35v/68uP/xcC2//Ht
        3v///Oj///Xf/+/Ur//ImXL/v49Y/8+0lcH///8B////AcCWZe3JnGb/z5+A//rz4v/99un/8vDj/42M
        hP+Bf3f/0s/C///76//67Mz/x5Bt/8mcZv/AlmXt////Af///wHJnmvtzqZx/9Glif/69un//fju////
        +f+BgHn/sa6k/4F/d//Jxrr/+vDT/8mWcv/OpnH/yZ5r7f///wH///8B4cOgwdOsdf/Zt5j/8ePW//77
        9f/19fP/n56V//Dw6f/4+PL/vrmt//Dawv/Sqof/06x1/+HDoMH///8B////Aefh1YvTrXf/38Sa/969
        qv//////8PDu/+fl2v////f////3///+8//ctJj/28CW/8Kqfv/u5NWF////Ae/4/D1NtOHZPaLJ9d6/
        iv/iyaf/37+u//Hj3P/z8ez/9PHr//Hi2f/cuqP/38Oe/4yxqf9AqtP5X7vjz/j7/SfB5/d9jdby7XPJ
        6u9Apsb74seS/+bRqf/gwqb/1a6W/9Wrkv/evaD/5M+m/7/Bnv9Jstf9q+P2/WPF7dn4+/0nw+n4e3vS
        8+W16Pn/c83t70uw0PPsxIj/6cuU/+fQnf/n0J3/6cuU/97Cjv9BsNL1idXw9YfW8+taxfDN/f39Bf39
        /QWz5vmLetT15b/s+v920/PplNDexfrYrsH6xIbt+sSG7frYrsGY0N3DfNXy7Y3a9u1gzPTJ+v39Hf//
        /wH///8B/f39A73r+oFTzPbRXc/3y/39/Qf///8B////Af///wH///8B/P39F1PM9tFg0PfJ+Pz9J///
        /wH///8BAAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//w==
</value>
  </data>
</root>